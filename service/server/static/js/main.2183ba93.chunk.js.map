{"version":3,"sources":["index.js"],"names":["Login","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","type","name","value","defaultChecked","onClick","this","loadXMLDoc","document","getElementById","sex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","querySelectorAll","Symbol","iterator","next","done","i","checked","err","return","findsex","console","log","age","jsoned","JSON","stringify","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","innerHTML","responseText","getJson","open","setRequestHeader","send","React","Component","ReactDOM","render"],"mappings":"wMAGMA,mLAEF,OACGC,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAAA,8DACCF,EAAAC,EAAAC,cAAA,QAAMC,GAAG,SAAT,qBACOH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,KAAK,OAAOF,GAAG,UAASH,EAAAC,EAAAC,cAAA,WADlD,qBAEOF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,QAASC,KAAK,MAAMC,MAAM,SAAIC,eAAe,YAFhE,eAGIP,EAAAC,EAAAC,cAAA,SAAOE,KAAK,QAASC,KAAK,MAAMC,MAAM,WAH1C,eAGiDN,EAAAC,EAAAC,cAAA,WAHjD,qBAIOF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,KAAK,MAAMF,GAAG,QAAOH,EAAAC,EAAAC,cAAA,WAC3CF,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASI,QAASC,KAAKC,YAApC,gEAQb,IAAIL,EAAOM,SAASC,eAAe,SAASN,MAS5C,IAAIO,EAPJ,WAAkB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAChB,QAAAC,EAAAC,EAAcR,SAASS,iBAAiB,uBAAxCC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAgE,KAAvDW,EAAuDP,EAAAZ,MAC5D,IAAkB,IAAdmB,EAAEC,QACF,OAAOD,EAAEnB,OAHD,MAAAqB,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,IAOTa,GACTC,QAAQC,IAAI,OAAOlB,GACnB,IAAImB,EAAMrB,SAASC,eAAe,OAAON,MAGrC2B,EAASC,KAAKC,UAAU,CAAC9B,KAAOA,EAAKQ,IAAMA,EAAImB,IAAMA,IAEzD,OADAF,QAAQC,IAAI,eAAeE,GACpBA,uCAIP,IAAIG,EAAU,IAAIC,eAClBD,EAAQE,mBAAmB,WACC,IAAtBF,EAAQG,YAAqC,MAAlBH,EAAQI,SACrC7B,SAASC,eAAe,SAAS6B,UAAYL,EAAQM,eAG3D,IAAIT,EAASxB,KAAKkC,UAClBP,EAAQQ,KAAK,OAAO,0CAAyC,GAC7DR,EAAQS,iBAAiB,eAAe,oBACxCT,EAAQU,KAAKb,UA/CKc,IAAMC,WAoD1BC,IAASC,OACPlD,EAAAC,EAAAC,cAACH,EAAD,MACAY,SAASC,eAAe","file":"static/js/main.2183ba93.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Login extends React.Component {\n  render() {\n    return (\n       <div>\n            <h2>请输入宝宝的信息</h2>\n             <form id=\"myDiv\">\n                 姓名：<input type=\"text\" name=\"name\" id=\"name1\"/><br />\n                 性别：<input type=\"radio\"  name=\"sex\" value=\"男\" defaultChecked=\"checked\" />男士\n                 <input type=\"radio\"  name=\"sex\" value=\"女\"/>女士<br />\n                 年龄：<input type=\"text\" name=\"age\" id=\"age\"/><br />\n                 <button type=\"button\" onClick={this.loadXMLDoc}>提交数据</button>\n             </form>\n          </div>\n    );\n  }\n  \n  getJson(){\n    //获取用户填写的信息\n    let name = document.getElementById(\"name1\").value;\n    //利用querySelectorAll找到所有radionuclide，遍历其boolean从而筛选除有效的值。\n    function findsex(){\n      for (let i of document.querySelectorAll(\"input[type='radio']\")) {\n          if (i.checked === true) {\n              return i.value\n          }\n      }\n    };\n    let sex =findsex();\n    console.log(\"sex:\",sex);\n    let age = document.getElementById(\"age\").value;\n\n    //这里是封装发送\n    let jsoned = JSON.stringify({\"name\":name,\"sex\":sex,\"age\":age});\n    console.log(\"============\",jsoned);\n    return jsoned;\n  }\n\n\n  loadXMLDoc(){\n    let xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange=function(){\n      if (xmlhttp.readyState ===4 && xmlhttp.status ===200){\n        document.getElementById(\"myDiv\").innerHTML = xmlhttp.responseText;\n      }\n    };\n\n    let jsoned = this.getJson();\n    xmlhttp.open(\"POST\",\"http://127.0.0.1:8000/server/AjaxLoad/\",true);\n    xmlhttp.setRequestHeader(\"Content-type\",\"application/json\");\n    xmlhttp.send(jsoned);\n  }\n}\n\n//=========================================================\nReactDOM.render(\n  <Login />,\n  document.getElementById('root')\n);"],"sourceRoot":""}